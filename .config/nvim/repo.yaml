---
## Startup
# --------
- repo: Shougo/dein.vim
- repo: haya14busa/dein-command.vim
- repo: nvim-lua/popup.nvim
- repo: nvim-lua/plenary.nvim

# Improve CursorHold performance
# See: https://github.com/neovim/neovim/issues/12587
- repo: antoinemadec/FixCursorHold.nvim
  if: has('nvim')
  hook_add: let g:cursorhold_updatetime = 100

- repo: sgur/vim-editorconfig
  hook_add: |-
    let g:editorconfig_verbose = 1
    let g:editorconfig_blacklist = {
      \ 'filetype': [
      \   'git.*', 'fugitive', 'help', 'defx', 'denite.*', 'startify',
      \   'vista.*', 'tagbar', 'lsp-.*', 'clap_.*', 'any-jump', 'gina-.*',
      \   'lsp-*'
      \  ],
      \ 'pattern': ['\.un~$']
      \ }



# Filetypes
# ---------
# --> typescript & javascript
- repo: leafgarland/typescript-vim
- repo: peitalin/vim-jsx-typescript
- {repo: neoclide/jsonc.vim, on_ft: jsonc}
- {repo: heavenshell/vim-jsdoc, on_ft: [javascript, javascriptreact]}
- {repo: jparise/vim-graphql, on_ft: [javascript, javascriptreact]}
- {repo: moll/vim-node, on_ft: [javascript, javascriptreact]}
- {repo: AndrewRadev/tagalong.vim, on_ft: [typescriptreact, javascriptreact, html]}

# --> php
- repo: janko-m/vim-test
  on_ft: php
  hook_add: let g:test#strategy = 'dispatch_background'

- repo: stephpy/vim-php-cs-fixer
  on_ft: php
  hook_add: |
    let g:php_cs_fixer_path = "php-cs-fixer"
    let g:php_cs_fixer_rules = "@PSR2"

# --> misc
-  repo: tjdevries/manillua.nvim
- {repo: tjdevries/nlua.nvim, on_ft: lua}
- {repo: euclidianAce/BetterLua.vim}
- {repo: zinit-zsh/zinit-vim-syntax}
- {repo: tbastos/vim-lua, on_ft: lua}
- {repo: vim-ruby/vim-ruby, on_ft: ruby}
- {repo: rust-lang/rust.vim, on_ft: rust}
- {repo: vim-jp/syntax-vim-ex, on_ft: vim}
- {repo: chrisbra/csv.vim, on_ft: csv}
- {repo: tpope/vim-git, on_ft: [gitcommit, gitrebase, gitconfig]}
- {repo: ekalinin/Dockerfile.vim, on_ft: [Dockerfile, docker-compose]}
- {repo: tmux-plugins/vim-tmux, on_ft: tmux}
- {repo: MTDL9/vim-log-highlighting, on_ft: log}
- {repo: cespare/vim-toml, on_ft: toml}
- {repo: mboughaba/i3config.vim, on_ft: i3config}
- {repo: dag/vim-fish, on_ft: fish}
- {repo: jstrater/mpvim, on_ft: portfile}
- {repo: robbles/logstash.vim, on_ft: logstash}
- {repo: lifepillar/pgsql.vim, on_ft: pgsql}
- {repo: chr4/nginx.vim, on_ft: nginx}
- {repo: towolf/vim-helm, on_ft: helm }
- {repo: reasonml-editor/vim-reason-plus, on_ft: [reason, merlin]}

# --> markdown related
- repo: dkarter/bullets.vim
- repo: plasticboy/vim-markdown
  on_ft: markdown
  hook_add: lua require('mines.plugins._vim_markdown').setup()

- repo: iamcco/markdown-preview.nvim
  on_ft: [markdown', pandoc.markdown, rmd]
  build: 'sh -c "cd app & yarn install"'
  hook_source: let g:mkdp_auto_start = 0

- repo: mzlogin/vim-markdown-toc
  on_cmd: [ GenTocGFM, GenTocRedcarpet, GenTocGitLab, UpdateToc ]
  hook_add: let g:vmt_auto_update_on_save = 0


# --> (DO)cument (GE)nerator
- repo: kkoomen/vim-doge
  on_ft: [python, php, javascript, typescript, lua, sh]
  hook_post_source: ':call doge#install()'
  hook_add: lua require('mines.plugins._doge').setup()


# --[ Treesitter ]--
- repo: nvim-treesitter/nvim-treesitter
# hook_post_source: ":TSUpdate"

- repo: nvim-treesitter/nvim-treesitter-textobjects
  on_source: nvim-treesitter



# ==========================================
# --[ Enhancements ]--
- repo: tpope/vim-repeat
- repo: tpope/vim-abolish

- repo: b3nj5m1n/kommentary
  hook_soure: |
    lua << EOL
      require('kommentary.config').configure_language("lua", {
        single_line_comment_string = "--",
        prefer_single_line_comments = true
    })
    EOL

- repo: norcalli/nvim-colorizer.lua
  on_ft: [ html, css, sass, scss, vim, javascript, javascriptreact, typescript, typescriptreact, ]
  hook_source: lua require('mines.plugins._nvim_colorizer')

- repo: andymass/vim-matchup
  on_event: CursorHold
  hook_add: lua require('mines.plugins._vim_matchup').setup()

- repo: romainl/vim-cool
  on_event: [CursorMoved, InsertEnter]

- repo: luochen1990/rainbow
  on_ft:
    - css
    - html
    - json
    - jsonc
    - javascript
    - javascriptreact
    - php
    - python
    - svelte
    - typescript
    - typescriptreact
    - vim
    - vue
  hook_source: |
    let g:rainbow_active = 1
    let g:rainbow_conf = {
      \  'guifgs': ['darkorange3', 'seagreen3', 'royalblue3', 'firebrick'],
      \  'ctermfgs': ['lightyellow', 'lightcyan','lightblue', 'lightmagenta'],
      \  'operators': '_,_',
      \  'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold'],
      \  'separately': {
        \     '*': {},
        \     'vim': {
          \       'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimFuncBody', 'start=/\[/ end=/\]/ containedin=vimFuncBody', 'start=/{/ end=/}/ fold containedin=vimFuncBody'],
          \     },
          \     'css': 0,
          \  }
          \}

- repo: Yggdroot/indentLine
  on_cmd: IndentLinesToggle
  on_ft:
    - css
    - html
    - json
    - jsonc
    - javascript
    - javascriptreact
    - php
    - python
    - svelte
    - typescript
    - typescriptreact
    - vim
    - vue
  hook_add: lua require('mines.plugins._indentline').setup()

# ==========================================
# Commands
# --------
- repo: junegunn/vim-easy-align
  hook_add: lua require('mines.plugins._vim_easy_align').setup()

- repo: rhysd/clever-f.vim
  hook_add: let g:clever_f_fix_key_direction = 1

- repo: arthurxavierx/vim-caser
  hook_add: let g:caser_prefix = '<Space>cc'

- repo: junegunn/goyo.vim
  depends: limelight.vim
  on_cmd: Goyo
  hook_source: lua require('mines.plugins._goyo').setup()

- repo: junegunn/limelight.vim
  on_cmd: Limelight

- repo: kyazdani42/nvim-tree.lua
  hook_source: lua require('mines.plugins._nvim_tree').setup()

- repo: lewis6991/gitsigns.nvim
  depends: plenary.nvim
  hook_source: lua require('mines.plugins._gitsigns').setup()

# - repo: Shougo/defx.nvim
#   on_cmd: Defx
#   hook_source: source $VIM_PATH/config/plugins/defx.vim
# 
# - { repo: kristijanhusak/defx-git, on_source: defx.nvim }
# - { repo: kristijanhusak/defx-icons, on_source: defx.nvim }
# 
# - { repo: tyru/caw.vim, on_map: { nx: <Plug> }}
# - { repo: lambdalisue/fin.vim, on_cmd: Fin }
# - { repo: mbbill/undotree, on_cmd: UndotreeToggle }
# - { repo: jreybert/vimagit, on_cmd: Magit }
# - { repo: tweekmonster/helpful.vim, on_cmd: HelpfulVersion }
# - { repo: kana/vim-altr, on_map: { n: <Plug> }}
# - { repo: Shougo/vinarise.vim, on_cmd: Vinarise }
# - { repo: guns/xterm-color-table.vim, on_cmd: XtermColorTable }
# - { repo: cocopon/colorswatch.vim, rev: main, on_cmd: ColorSwatchGenerate }
# - { repo: dstein64/vim-startuptime, on_cmd: StartupTime }
# - { repo: lambdalisue/suda.vim, on_event: BufRead }
# 
# - repo: liuchengxu/vim-which-key
#   on_cmd: [ WhichKey, WhichKeyVisual ]
#   hook_source: source $VIM_PATH/config/plugins/whichkey.vim
# 
# - repo: lambdalisue/gina.vim
#   on_cmd: Gina
#   on_ft: [ gitcommit, gitrebase ]
#   hook_source: source $VIM_PATH/config/plugins/gina.vim
# 
- repo: mhinz/vim-grepper
  on_map: { nx: <Plug> }
  on_cmd: Grepper
  hook_add: |-
    let g:grepper = {
        \ 'tools': ['rg', 'git', 'fd'],
        \ 'fd': {
        \   'grepprg':    'fd',
        \   'grepformat': '%f',
        \   'escape':     '\+*^$()[]',
        \ }}
# - repo: brooth/far.vim
#   on_cmd: [ Far, Farp, F ]
#   hook_source: |-
#     if executable('rg')
#       let g:far#source = 'rg'
#     elseif executable('ag')
#       let g:far#source = 'ag'
#     elseif executable('ack')
#       let g:far#source = 'ack'
#     endif
# - repo: pechorin/any-jump.vim
#   on_cmd: [ AnyJump, AnyJumpVisual ]
#   hook_add: |-
#     let g:any_jump_disable_default_keybindings = 1
#     autocmd user_events FileType any-jump setlocal cursorline
# - repo: Vigemus/iron.nvim
#   if: has('nvim')
#   on_cmd: [ IronRepl, IronReplHere, IronFocus, IronSend, IronWatchCurrentFile ]
#   on_map: { nv: <Plug> }
#   on_func: IronUnwatchFile
#   hook_add: let g:iron_map_defaults = 0 | let g:iron_map_extended = 0
#   hook_source: luafile $VIM_PATH/config/plugins/iron.lua
# 
# - repo: kana/vim-niceblock
#   on_map: { x: <Plug> }
#   hook_add: let g:niceblock_no_default_key_mappings = 0
# 
# - repo: t9md/vim-choosewin
#   on_map: { n: <Plug> }
#   hook_add: |-
#     let g:choosewin_label = 'ADFGHJKLUIOPQWERT'
#     let g:choosewin_label_padding = 5
# - repo: wfxr/minimap.vim
#   on_cmd: [ Minimap, MinimapToggle ]
#   hook_source: |-
#     let g:minimap_block_filetypes = ['fugitive', 'nerdtree', 'defx']
# - repo: mzlogin/vim-markdown-toc
#   on_cmd: [ GenTocGFM, GenTocRedcarpet, GenTocGitLab, UpdateToc ]
#   hook_add: let g:vmt_auto_update_on_save = 0
# 
# - repo: reedes/vim-wordy
#   on_cmd: [ Wordy, NoWordy, NextWordy ]
#   # hook_add: let g:wordy_spell_dir = $DATA_PATH . '/wordy'
# 
# - repo: liuchengxu/vista.vim
#   on_cmd: Vista
#   hook_add: |-
#     let g:vista#renderer#enable_icon = 1
#     let g:vista_echo_cursor_strategy = 'scroll'
#     let g:vista_vimwiki_executive = 'markdown'
#     let g:vista_executive_for = {
#       \ 'vimwiki': 'markdown',
#       \ 'pandoc': 'markdown',
#       \ 'markdown': 'toc',
#       \ }
# - repo: junegunn/fzf
#   merged: 0
#   on_cmd: FZF
#   type__depth: 1
#   hook_source: |-
#     let g:fzf_layout = { 'down': '~25%' }
# - repo: junegunn/fzf.vim
#   depends: fzf
#   merged: 0
#   on_cmd: [ Files, GitFiles, Buffers, Lines, Locate, Colors, Ag, Rg, Tags ]
#   on_func: [ fzf#vim#with_preview, fzf#run, vista#finder#fzf#Run ]
# 
# - repo: Ron89/thesaurus_query.vim
#   on_cmd:
#     - Thesaurus
#     - ThesaurusQueryReplaceCurrentWord
#     - ThesaurusQueryLookupCurrentWord
#   hook_add: |-
#     let g:tq_map_keys = 0
#     let g:tq_use_vim_autocomplete = 0
#     
# # ==========================================
# # Interface
# # ---------
# - { repo: itchyny/vim-gitbranch, on_event: FileType }
# - { repo: itchyny/vim-parenmatch, on_event: FileType }
# - { repo: romainl/vim-cool, on_event: [ CursorMoved, InsertEnter ]}
# - { repo: haya14busa/vim-asterisk, on_map: { nv: <Plug> }}
# - { repo: rhysd/accelerated-jk, on_map: { n: <Plug> }, if: $SUDO_USER == '' }
# - { repo: haya14busa/vim-edgemotion, on_map: { nv: <Plug> }}
# - { repo: t9md/vim-quickhl, on_map: { nv: <Plug> }}
# - { repo: rafi/vim-sidemenu, on_map: { nv: <Plug> }}
# 
# - repo: machakann/vim-highlightedyank
#   if: "! has('nvim-0.5')"
#   on_event: TextYankPost
#   hook_source: let g:highlightedyank_highlight_duration = 200
# 
# - repo: romainl/vim-qf
#   on_ft: qf
#   on_event: QuickFixCmdPost
#   on_map: { n: <Plug> }
#   hook_add: |-
#     let g:qf_bufname_or_text = 1
#     let g:qf_auto_open_quickfix = 0
#     let g:qf_auto_open_loclist = 0
#     let g:qf_auto_resize = 0
#     autocmd User preview_open_pre
#       \  let g:vim_markdown_no_default_key_mappings = 1
#       \| let g:vim_markdown_emphasis_multiline = 0
#     autocmd User preview_open_post
#       \  unlet! g:vim_markdown_no_default_key_mappings
#       \| unlet! g:vim_markdown_emphasis_multiline
# - repo: itchyny/vim-cursorword
#   on_event: FileType
#   hook_add: let g:cursorword = 0
#   hook_source: |-
#     augroup user_plugin_cursorword
#       autocmd!
#       autocmd FileType json,yaml,markdown,nginx,dosini,conf
#         \ let b:cursorword = 1
#       autocmd WinEnter * if &diff || &pvw | let b:cursorword = 0 | endif
#       autocmd InsertEnter * if get(b:, 'cursorword', 0) == 1
#         \| let b:cursorword = 0
#         \| endif
#       autocmd InsertLeave * if get(b:, 'cursorword', 1) == 0
#         \| let b:cursorword = 1
#         \| endif
#     augroup END
# - repo: airblade/vim-gitgutter
#   on_event: FileType
#   hook_add: |-
#     let g:gitgutter_map_keys = 0
#     let g:gitgutter_sign_added = '▎'
#     let g:gitgutter_sign_modified = '▎'
#     let g:gitgutter_sign_removed = '▍'
#     let g:gitgutter_sign_removed_first_line = '▘'
#     let g:gitgutter_sign_removed_above_and_below = '_¯'
#     let g:gitgutter_sign_modified_removed = '▍'
#     let g:gitgutter_preview_win_floating = 1
#     let g:gitgutter_sign_allow_clobber = 0
#     let g:gitgutter_sign_priority = 0
#     let g:gitgutter_override_sign_column_highlight = 0
# - repo: kshenoy/vim-signature
#   depends: vim-gitgutter
#   on_event: FileType
#   hook_add: |-
#     let g:SignatureForceRemoveGlobal = 0
#     let g:SignatureUnconditionallyRecycleMarks = 1
#     let g:SignatureErrorIfNoAvailableMarks = 0
#     let g:SignaturePurgeConfirmation = 0
#     let g:SignatureMarkTextHLDynamic = 1
#     let g:SignatureMarkerTextHLDynamic = 1
#     let g:SignatureIncludeMarkers = repeat('⚐', 10)
#     autocmd user_events User GitGutter call signature#sign#Refresh()
# - repo: nathanaelkane/vim-indent-guides
#   on_event: FileType
#   hook_source: |-
#     let g:indent_guides_enable_on_vim_startup = 0
#     let g:indent_guides_default_mapping = 0
#     let g:indent_guides_tab_guides = 0
#     let g:indent_guides_color_change_percent = 3
#     let g:indent_guides_guide_size = 1
#     let g:indent_guides_exclude_filetypes = [
#       \ 'help', 'man', 'fern', 'defx', 'denite', 'denite-filter', 'startify',
#       \ 'vista', 'vista_kind', 'tagbar', 'lsp-hover', 'clap_input', 'fzf',
#       \ 'any-jump', 'gina-status', 'gina-commit', 'gina-log', 'minimap',
#       \ 'quickpick-filter', 'lsp-quickpick-filter'
#       \ ]
#     autocmd user_events FileType * ++once IndentGuidesEnable
# - repo: rhysd/committia.vim
#   on_event: BufReadPost
#   hook_source: let g:committia_min_window_width = 70
# 

- repo: itchyny/calendar.vim
  on_cmd: Calendar
  hook_source: |-
    let g:calendar_google_calendar = 1
    let g:calendar_google_task = 1

# 
# - repo: vimwiki/vimwiki
#   on_map: { n: <Plug> }
#   on_cmd: [ VimwikiIndex, VimwikiUISelect ]
#   hook_add: |-
#     let g:vimwiki_use_calendar = 1
#     let g:vimwiki_hl_headers = 1
#     let g:vimwiki_hl_cb_checked = 1
#     let g:vimwiki_autowriteall = 0
#   hook_source: |-
#     let g:vimwiki_list = [
#     \   { 'diary_header': 'Diary',
#     \     'diary_link_fmt': '%Y-%m/%d',
#     \     'auto_toc': 1,
#     \     'path': '~/docs/wiki/',
#     \     'syntax': 'markdown',
#     \     'ext': '.md' },
#     \   { 'path': '~/docs/books/',
#     \     'syntax': 'markdown',
#     \     'ext': '.md' }
#     \ ]
# - repo: norcalli/nvim-colorizer.lua
#   if: has('nvim-0.4')
#   on_event: FileType
#   hook_source: luafile $VIM_PATH/config/plugins/colorizer.lua


# Completion & code analysis
# --------------------------
- repo: neovim/nvim-lspconfig

- repo: hrsh7th/nvim-compe

- repo: kosayoda/nvim-lightbulb
- repo: onsails/lspkind-nvim
 
- repo: mattn/emmet-vim
  on_event: InsertEnter
  on_ft:
    - css
    - html
    - vue
    - svelte
    - javascript
    - javascriptreact
    - typescript
    - typescriptreact
  hook_source: lua require('mines.plugins._emmet_vim').setup()

- repo: Raimondi/delimitMate
  on_event: FileType
  hook_source: lua require('mines.plugins.delimitmate').setup()

- repo: hrsh7th/vim-vsnip
  on_event: InsertCharPre
  hook_source: let g:vsnip_snippet_dir = getenv("HOME") . "/.config/nvim/snippets"

- repo: 'liuchengxu/vista.vim'
  on_cmd: ['Vista', 'Vista!', 'Vista!!']
  hook_source: lua require('mines.plugins._vista').setup()

# Telesscope
# ----------
- repo: nvim-telescope/telescope.nvim
- repo: nvim-telescope/telescope-fzy-native.nvim
- repo: nvim-telescope/telescope-fzf-writer.nvim
- repo: nvim-telescope/telescope-github.nvim

# Text objects & Operators
# ------------------------
- repo: kana/vim-operator-user
- { repo: kana/vim-operator-replace, on_map: { vnx: <Plug> }}

- repo: machakann/vim-sandwich
  on_map: { vonx: <Plug>(operator-sandwich- }
  hook_add: |-
    let g:sandwich_no_default_key_mappings = 1
    let g:operator_sandwich_no_default_key_mappings = 1
    let g:textobj_sandwich_no_default_key_mappings = 1

- repo: kana/vim-textobj-user
- repo: reedes/vim-textobj-sentence
- repo: reedes/vim-textobj-quote
- repo: wellle/targets.vim
- repo: machakann/vim-textobj-delimited
- repo: thinca/vim-textobj-between

- { repo: AndrewRadev/sideways.vim, on_map: { onx: <Plug>Sideways }}
- { repo: AndrewRadev/splitjoin.vim, on_map: { n: <Plug>Splitjoin }}

- repo: AndrewRadev/dsf.vim
  on_map: { n: <Plug>Dsf }
  hook_add: let g:dsf_no_mappings = 1

- repo: osyo-manga/vim-textobj-multiblock
  hook_add: let g:textobj_multiblock_no_default_key_mappings = 1

- repo: kana/vim-textobj-function
  on_map: { ox: <Plug> }
  hook_add: let g:textobj_function_no_default_key_mappings = 1


# Colorschemes
# ------------
- repo: logico/typewriter-vim
- repo: tomasiser/vim-code-dark
- repo: mhartington/oceanic-next
- repo: Rigellute/shades-of-purple.vim

- repo: gruvbox-community/gruvbox
  hook_add: |-
    let g:gruvbox_contrast_dark = 'soft'
    let g:gruvbox_contrast_light = 'hard'
    let g:gruvbox_invert_indent_guides = 1

- repo: arcticicestudio/nord-vim
  hook_add: |
    let g:nord_uniform_diff_background = 1
    let g:nord_bold_vertical_split_line = 1

- repo: junegunn/seoul256.vim
  hook_add: |
    let g:seoul256_background = 233
    let g:seoul256_light_background = 256

- repo: joshdick/onedark.vim
  hook_add: let g:onedark_hide_endofbuffer = 1

- repo: lifepillar/vim-solarized8
  hook_add: let g:solarized_visibility = 'high'

- repo: nanotech/jellybeans.vim
  hook_add: let g:jellybeans_use_term_italics = 1

- repo: rafi/awesome-vim-colorschemes
  hook_add: let g:one_allow_italics = 1
